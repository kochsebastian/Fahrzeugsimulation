classType components.SOS
blockdiagramSpecification Main {
	methodBody calc {
		outPin active {
			connection_14, connection_5, connection_1
		}
	}
	greaterOrEqual at (431, 226) {
		inPin connection_7
		inPin connection_17 {
			bendpoints (20, 0), (20, -40)
		}
		outPin {
			connection_11
		}
	}
	not at (661, 281) {
		inPin connection_18
		outPin {
			connection_8
		}
	}
	addition at (201, 216) {
		inPin connection_16
		inPin connection_13 {
			bendpoints (20, 0), (20, 40), (-140, 40)
		}
		outPin {
			connection_6
		}
	}
	simpleIdentifier led_state at (331, 155) {
		label at (0, -1)
		inPin connection_15
		outPin sequenceCall {
			inPin connection_14
		}
	}
	simpleIdentifier led_state at (731, 285) {
		label at (0, -1)
		inPin connection_8
		outPin sequenceCall {
			inPin connection_3 {
				bendpoints (20, 0), (20, 30)
			}
		}
	}
	simpleIdentifier duration at (291, 225) {
		label at (0, -1)
		inPin connection_6
		outPin {
			connection_13, connection_7
		}
		sequenceCall {
			inPin connection_5
		}
	}
	ifElse at (511, 231) {
		inPin connection_11
		ifControlFlowOutPin {
			connection_3, connection_20
		}
		elseControlFlowOutPin {
			connection_19
		}
		sequenceCall {
			inPin connection_1
		}
	}
	methodArgumentIdentifier calc.in_status at (181, 155) {
		label at (0, -1)
		outPin {
			connection_15
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier calc.my_dT at (101, 215) {
		label at (0, -1)
		outPin {
			connection_16
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier calc.time at (341, 285) {
		label at (0, -1)
		outPin {
			connection_17
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier calc.in_status at (561, 285) {
		label at (0, -1)
		outPin {
			connection_18
		}
		sequenceCall {
			inPin
		}
	}
	return at (691, 445) {
		label at (0, 0)
		inPin connection_21
		sequenceCall {
			inPin connection_19 {
				bendpoints (0, 160)
			}
		}
	}
	literal Numeric "0.8" at (491, 443) size (49, 0) {
		outPin {
			connection_21
		}
	}
	return at (741, 355) {
		label at (0, 0)
		inPin connection_22
		sequenceCall {
			inPin connection_20 {
				bendpoints (20, 0), (20, 30), (140, 30), (140, 60), (170, 60)
			}
		}
	}
	literal Numeric "1.6" at (541, 353) size (49, 0) {
		outPin {
			connection_22
		}
	}
}